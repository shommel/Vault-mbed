/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_HW_TREZOR_MESSAGES_BITCOIN_MESSAGES_BITCOIN_PB_H_INCLUDED
#define PB_HW_TREZOR_MESSAGES_BITCOIN_MESSAGES_BITCOIN_PB_H_INCLUDED
#include <pb.h>

#include "messages-common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _hw_trezor_messages_bitcoin_InputScriptType {
    hw_trezor_messages_bitcoin_InputScriptType_SPENDADDRESS = 0,
    hw_trezor_messages_bitcoin_InputScriptType_SPENDMULTISIG = 1,
    hw_trezor_messages_bitcoin_InputScriptType_EXTERNAL = 2,
    hw_trezor_messages_bitcoin_InputScriptType_SPENDWITNESS = 3,
    hw_trezor_messages_bitcoin_InputScriptType_SPENDP2SHWITNESS = 4
} hw_trezor_messages_bitcoin_InputScriptType;
#define _hw_trezor_messages_bitcoin_InputScriptType_MIN hw_trezor_messages_bitcoin_InputScriptType_SPENDADDRESS
#define _hw_trezor_messages_bitcoin_InputScriptType_MAX hw_trezor_messages_bitcoin_InputScriptType_SPENDP2SHWITNESS
#define _hw_trezor_messages_bitcoin_InputScriptType_ARRAYSIZE ((hw_trezor_messages_bitcoin_InputScriptType)(hw_trezor_messages_bitcoin_InputScriptType_SPENDP2SHWITNESS+1))

typedef enum _hw_trezor_messages_bitcoin_TxRequest_RequestType {
    hw_trezor_messages_bitcoin_TxRequest_RequestType_TXINPUT = 0,
    hw_trezor_messages_bitcoin_TxRequest_RequestType_TXOUTPUT = 1,
    hw_trezor_messages_bitcoin_TxRequest_RequestType_TXMETA = 2,
    hw_trezor_messages_bitcoin_TxRequest_RequestType_TXFINISHED = 3,
    hw_trezor_messages_bitcoin_TxRequest_RequestType_TXEXTRADATA = 4
} hw_trezor_messages_bitcoin_TxRequest_RequestType;
#define _hw_trezor_messages_bitcoin_TxRequest_RequestType_MIN hw_trezor_messages_bitcoin_TxRequest_RequestType_TXINPUT
#define _hw_trezor_messages_bitcoin_TxRequest_RequestType_MAX hw_trezor_messages_bitcoin_TxRequest_RequestType_TXEXTRADATA
#define _hw_trezor_messages_bitcoin_TxRequest_RequestType_ARRAYSIZE ((hw_trezor_messages_bitcoin_TxRequest_RequestType)(hw_trezor_messages_bitcoin_TxRequest_RequestType_TXEXTRADATA+1))

typedef enum _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType {
    hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOADDRESS = 0,
    hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOSCRIPTHASH = 1,
    hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOMULTISIG = 2,
    hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOOPRETURN = 3,
    hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOWITNESS = 4,
    hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOP2SHWITNESS = 5
} hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType;
#define _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_MIN hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOADDRESS
#define _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_MAX hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOP2SHWITNESS
#define _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_ARRAYSIZE ((hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType)(hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_PAYTOP2SHWITNESS+1))

/* Struct definitions */
typedef struct _hw_trezor_messages_bitcoin_Address {
    pb_callback_t address;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_Address) */
} hw_trezor_messages_bitcoin_Address;


typedef struct _hw_trezor_messages_bitcoin_MessageSignature {
    pb_callback_t address;
    pb_callback_t signature;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_MessageSignature) */
} hw_trezor_messages_bitcoin_MessageSignature;


typedef struct _hw_trezor_messages_bitcoin_VerifyMessage {
    pb_callback_t address;
    pb_callback_t signature;
    pb_callback_t message;
    pb_callback_t coin_name;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_VerifyMessage) */
} hw_trezor_messages_bitcoin_VerifyMessage;


typedef struct _hw_trezor_messages_bitcoin_GetPublicKey {
    pb_callback_t address_n;
    pb_callback_t ecdsa_curve_name;
    bool has_show_display;
    bool show_display;
    pb_callback_t coin_name;
    bool has_script_type;
    hw_trezor_messages_bitcoin_InputScriptType script_type;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_GetPublicKey) */
} hw_trezor_messages_bitcoin_GetPublicKey;


typedef struct _hw_trezor_messages_bitcoin_MultisigRedeemScriptType {
    pb_callback_t pubkeys;
    pb_callback_t signatures;
    bool has_m;
    uint32_t m;
    pb_callback_t nodes;
    pb_callback_t address_n;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_MultisigRedeemScriptType) */
} hw_trezor_messages_bitcoin_MultisigRedeemScriptType;


typedef struct _hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType {
    hw_trezor_messages_common_HDNodeType node;
    pb_callback_t address_n;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType) */
} hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType;


typedef struct _hw_trezor_messages_bitcoin_PublicKey {
    bool has_node;
    hw_trezor_messages_common_HDNodeType node;
    pb_callback_t xpub;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_PublicKey) */
} hw_trezor_messages_bitcoin_PublicKey;


typedef struct _hw_trezor_messages_bitcoin_SignMessage {
    pb_callback_t address_n;
    pb_callback_t message;
    pb_callback_t coin_name;
    bool has_script_type;
    hw_trezor_messages_bitcoin_InputScriptType script_type;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_SignMessage) */
} hw_trezor_messages_bitcoin_SignMessage;


typedef struct _hw_trezor_messages_bitcoin_SignTx {
    uint32_t outputs_count;
    uint32_t inputs_count;
    pb_callback_t coin_name;
    bool has_version;
    uint32_t version;
    bool has_lock_time;
    uint32_t lock_time;
    bool has_expiry;
    uint32_t expiry;
    bool has_overwintered;
    bool overwintered;
    bool has_version_group_id;
    uint32_t version_group_id;
    bool has_timestamp;
    uint32_t timestamp;
    bool has_branch_id;
    uint32_t branch_id;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_SignTx) */
} hw_trezor_messages_bitcoin_SignTx;


typedef struct _hw_trezor_messages_bitcoin_TxAck_TransactionType {
    bool has_version;
    uint32_t version;
    pb_callback_t inputs;
    pb_callback_t bin_outputs;
    bool has_lock_time;
    uint32_t lock_time;
    pb_callback_t outputs;
    bool has_inputs_cnt;
    uint32_t inputs_cnt;
    bool has_outputs_cnt;
    uint32_t outputs_cnt;
    pb_callback_t extra_data;
    bool has_extra_data_len;
    uint32_t extra_data_len;
    bool has_expiry;
    uint32_t expiry;
    bool has_overwintered;
    bool overwintered;
    bool has_version_group_id;
    uint32_t version_group_id;
    bool has_timestamp;
    uint32_t timestamp;
    bool has_branch_id;
    uint32_t branch_id;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_TxAck_TransactionType) */
} hw_trezor_messages_bitcoin_TxAck_TransactionType;


typedef struct _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType {
    uint64_t amount;
    pb_callback_t script_pubkey;
    bool has_decred_script_version;
    uint32_t decred_script_version;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType) */
} hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType;


typedef struct _hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType {
    bool has_request_index;
    uint32_t request_index;
    pb_callback_t tx_hash;
    bool has_extra_data_len;
    uint32_t extra_data_len;
    bool has_extra_data_offset;
    uint32_t extra_data_offset;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType) */
} hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType;


typedef struct _hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType {
    bool has_signature_index;
    uint32_t signature_index;
    pb_callback_t signature;
    pb_callback_t serialized_tx;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType) */
} hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType;


typedef struct _hw_trezor_messages_bitcoin_GetAddress {
    pb_callback_t address_n;
    pb_callback_t coin_name;
    bool has_show_display;
    bool show_display;
    bool has_multisig;
    hw_trezor_messages_bitcoin_MultisigRedeemScriptType multisig;
    bool has_script_type;
    hw_trezor_messages_bitcoin_InputScriptType script_type;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_GetAddress) */
} hw_trezor_messages_bitcoin_GetAddress;


typedef struct _hw_trezor_messages_bitcoin_TxAck {
    bool has_tx;
    hw_trezor_messages_bitcoin_TxAck_TransactionType tx;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_TxAck) */
} hw_trezor_messages_bitcoin_TxAck;


typedef struct _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType {
    pb_callback_t address_n;
    pb_callback_t prev_hash;
    uint32_t prev_index;
    pb_callback_t script_sig;
    bool has_sequence;
    uint32_t sequence;
    bool has_script_type;
    hw_trezor_messages_bitcoin_InputScriptType script_type;
    bool has_multisig;
    hw_trezor_messages_bitcoin_MultisigRedeemScriptType multisig;
    bool has_amount;
    uint64_t amount;
    bool has_decred_tree;
    uint32_t decred_tree;
    bool has_decred_script_version;
    uint32_t decred_script_version;
    pb_callback_t prev_block_hash_bip115;
    bool has_prev_block_height_bip115;
    uint32_t prev_block_height_bip115;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType) */
} hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType;


typedef struct _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType {
    pb_callback_t address;
    pb_callback_t address_n;
    uint64_t amount;
    hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType script_type;
    bool has_multisig;
    hw_trezor_messages_bitcoin_MultisigRedeemScriptType multisig;
    pb_callback_t op_return_data;
    bool has_decred_script_version;
    uint32_t decred_script_version;
    pb_callback_t block_hash_bip115;
    bool has_block_height_bip115;
    uint32_t block_height_bip115;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType) */
} hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType;


typedef struct _hw_trezor_messages_bitcoin_TxRequest {
    bool has_request_type;
    hw_trezor_messages_bitcoin_TxRequest_RequestType request_type;
    bool has_details;
    hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType details;
    bool has_serialized;
    hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType serialized;
/* @@protoc_insertion_point(struct:hw_trezor_messages_bitcoin_TxRequest) */
} hw_trezor_messages_bitcoin_TxRequest;


/* Initializer values for message structs */
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_init_default {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_init_default {hw_trezor_messages_common_HDNodeType_init_default, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_GetPublicKey_init_default {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, hw_trezor_messages_bitcoin_InputScriptType_SPENDADDRESS}
#define hw_trezor_messages_bitcoin_PublicKey_init_default {false, hw_trezor_messages_common_HDNodeType_init_default, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_GetAddress_init_default {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, hw_trezor_messages_bitcoin_MultisigRedeemScriptType_init_default, false, hw_trezor_messages_bitcoin_InputScriptType_SPENDADDRESS}
#define hw_trezor_messages_bitcoin_Address_init_default {{{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_SignMessage_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, hw_trezor_messages_bitcoin_InputScriptType_SPENDADDRESS}
#define hw_trezor_messages_bitcoin_MessageSignature_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_VerifyMessage_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_SignTx_init_default {0, 0, {{NULL}, NULL}, false, 1u, false, 0u, false, 0, false, 0, false, 0, false, 0, false, 0}
#define hw_trezor_messages_bitcoin_TxRequest_init_default {false, _hw_trezor_messages_bitcoin_TxRequest_RequestType_MIN, false, hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_init_default, false, hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_init_default}
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_init_default {false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_init_default {false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_TxAck_init_default {false, hw_trezor_messages_bitcoin_TxAck_TransactionType_init_default}
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_init_default {false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_init_default {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, false, 4294967295u, false, hw_trezor_messages_bitcoin_InputScriptType_SPENDADDRESS, false, hw_trezor_messages_bitcoin_MultisigRedeemScriptType_init_default, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0}
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_init_default {0, {{NULL}, NULL}, false, 0}
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_init_default {{{NULL}, NULL}, {{NULL}, NULL}, 0, _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_MIN, false, hw_trezor_messages_bitcoin_MultisigRedeemScriptType_init_default, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0}
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_init_zero {hw_trezor_messages_common_HDNodeType_init_zero, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_GetPublicKey_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, _hw_trezor_messages_bitcoin_InputScriptType_MIN}
#define hw_trezor_messages_bitcoin_PublicKey_init_zero {false, hw_trezor_messages_common_HDNodeType_init_zero, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_GetAddress_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, hw_trezor_messages_bitcoin_MultisigRedeemScriptType_init_zero, false, _hw_trezor_messages_bitcoin_InputScriptType_MIN}
#define hw_trezor_messages_bitcoin_Address_init_zero {{{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_SignMessage_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, _hw_trezor_messages_bitcoin_InputScriptType_MIN}
#define hw_trezor_messages_bitcoin_MessageSignature_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_VerifyMessage_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_SignTx_init_zero {0, 0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define hw_trezor_messages_bitcoin_TxRequest_init_zero {false, _hw_trezor_messages_bitcoin_TxRequest_RequestType_MIN, false, hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_init_zero, false, hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_init_zero}
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_init_zero {false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_init_zero {false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define hw_trezor_messages_bitcoin_TxAck_init_zero {false, hw_trezor_messages_bitcoin_TxAck_TransactionType_init_zero}
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_init_zero {false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, false, 0, false, _hw_trezor_messages_bitcoin_InputScriptType_MIN, false, hw_trezor_messages_bitcoin_MultisigRedeemScriptType_init_zero, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0}
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_init_zero {0, {{NULL}, NULL}, false, 0}
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, 0, _hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_OutputScriptType_MIN, false, hw_trezor_messages_bitcoin_MultisigRedeemScriptType_init_zero, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define hw_trezor_messages_bitcoin_Address_address_tag 1
#define hw_trezor_messages_bitcoin_MessageSignature_address_tag 1
#define hw_trezor_messages_bitcoin_MessageSignature_signature_tag 2
#define hw_trezor_messages_bitcoin_VerifyMessage_address_tag 1
#define hw_trezor_messages_bitcoin_VerifyMessage_signature_tag 2
#define hw_trezor_messages_bitcoin_VerifyMessage_message_tag 3
#define hw_trezor_messages_bitcoin_VerifyMessage_coin_name_tag 4
#define hw_trezor_messages_bitcoin_GetPublicKey_address_n_tag 1
#define hw_trezor_messages_bitcoin_GetPublicKey_ecdsa_curve_name_tag 2
#define hw_trezor_messages_bitcoin_GetPublicKey_show_display_tag 3
#define hw_trezor_messages_bitcoin_GetPublicKey_coin_name_tag 4
#define hw_trezor_messages_bitcoin_GetPublicKey_script_type_tag 5
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_pubkeys_tag 1
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_signatures_tag 2
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_m_tag 3
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_nodes_tag 4
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_address_n_tag 5
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_node_tag 1
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_address_n_tag 2
#define hw_trezor_messages_bitcoin_PublicKey_node_tag 1
#define hw_trezor_messages_bitcoin_PublicKey_xpub_tag 2
#define hw_trezor_messages_bitcoin_SignMessage_address_n_tag 1
#define hw_trezor_messages_bitcoin_SignMessage_message_tag 2
#define hw_trezor_messages_bitcoin_SignMessage_coin_name_tag 3
#define hw_trezor_messages_bitcoin_SignMessage_script_type_tag 4
#define hw_trezor_messages_bitcoin_SignTx_outputs_count_tag 1
#define hw_trezor_messages_bitcoin_SignTx_inputs_count_tag 2
#define hw_trezor_messages_bitcoin_SignTx_coin_name_tag 3
#define hw_trezor_messages_bitcoin_SignTx_version_tag 4
#define hw_trezor_messages_bitcoin_SignTx_lock_time_tag 5
#define hw_trezor_messages_bitcoin_SignTx_expiry_tag 6
#define hw_trezor_messages_bitcoin_SignTx_overwintered_tag 7
#define hw_trezor_messages_bitcoin_SignTx_version_group_id_tag 8
#define hw_trezor_messages_bitcoin_SignTx_timestamp_tag 9
#define hw_trezor_messages_bitcoin_SignTx_branch_id_tag 10
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_version_tag 1
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_inputs_tag 2
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_bin_outputs_tag 3
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_lock_time_tag 4
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_outputs_tag 5
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_inputs_cnt_tag 6
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_outputs_cnt_tag 7
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_extra_data_tag 8
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_extra_data_len_tag 9
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_expiry_tag 10
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_overwintered_tag 11
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_version_group_id_tag 12
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_timestamp_tag 13
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_branch_id_tag 14
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_amount_tag 1
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_script_pubkey_tag 2
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_decred_script_version_tag 3
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_request_index_tag 1
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_tx_hash_tag 2
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_extra_data_len_tag 3
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_extra_data_offset_tag 4
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_signature_index_tag 1
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_signature_tag 2
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_serialized_tx_tag 3
#define hw_trezor_messages_bitcoin_GetAddress_address_n_tag 1
#define hw_trezor_messages_bitcoin_GetAddress_coin_name_tag 2
#define hw_trezor_messages_bitcoin_GetAddress_show_display_tag 3
#define hw_trezor_messages_bitcoin_GetAddress_multisig_tag 4
#define hw_trezor_messages_bitcoin_GetAddress_script_type_tag 5
#define hw_trezor_messages_bitcoin_TxAck_tx_tag  1
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_address_n_tag 1
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_prev_hash_tag 2
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_prev_index_tag 3
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_script_sig_tag 4
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_sequence_tag 5
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_script_type_tag 6
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_multisig_tag 7
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_amount_tag 8
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_decred_tree_tag 9
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_decred_script_version_tag 10
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_prev_block_hash_bip115_tag 11
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_prev_block_height_bip115_tag 12
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_address_tag 1
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_address_n_tag 2
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_amount_tag 3
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_script_type_tag 4
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_multisig_tag 5
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_op_return_data_tag 6
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_decred_script_version_tag 7
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_block_hash_bip115_tag 8
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_block_height_bip115_tag 9
#define hw_trezor_messages_bitcoin_TxRequest_request_type_tag 1
#define hw_trezor_messages_bitcoin_TxRequest_details_tag 2
#define hw_trezor_messages_bitcoin_TxRequest_serialized_tag 3

/* Struct field encoding specification for nanopb */
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE, pubkeys, 1) \
X(a, CALLBACK, REPEATED, BYTES, signatures, 2) \
X(a, STATIC, OPTIONAL, UINT32, m, 3) \
X(a, CALLBACK, REPEATED, MESSAGE, nodes, 4) \
X(a, CALLBACK, REPEATED, UINT32, address_n, 5)
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_DEFAULT NULL
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_pubkeys_MSGTYPE hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_nodes_MSGTYPE hw_trezor_messages_common_HDNodeType

#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, MESSAGE, node, 1) \
X(a, CALLBACK, REPEATED, UINT32, address_n, 2)
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_DEFAULT NULL
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_node_MSGTYPE hw_trezor_messages_common_HDNodeType

#define hw_trezor_messages_bitcoin_GetPublicKey_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UINT32, address_n, 1) \
X(a, CALLBACK, OPTIONAL, STRING, ecdsa_curve_name, 2) \
X(a, STATIC, OPTIONAL, BOOL, show_display, 3) \
X(a, CALLBACK, OPTIONAL, STRING, coin_name, 4) \
X(a, STATIC, OPTIONAL, UENUM, script_type, 5)
#define hw_trezor_messages_bitcoin_GetPublicKey_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_GetPublicKey_DEFAULT (const uint8_t*)"\x28\x00\x00"

#define hw_trezor_messages_bitcoin_PublicKey_FIELDLIST(X, a) \
X(a, STATIC, OPTIONAL, MESSAGE, node, 1) \
X(a, CALLBACK, OPTIONAL, STRING, xpub, 2)
#define hw_trezor_messages_bitcoin_PublicKey_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_PublicKey_DEFAULT NULL
#define hw_trezor_messages_bitcoin_PublicKey_node_MSGTYPE hw_trezor_messages_common_HDNodeType

#define hw_trezor_messages_bitcoin_GetAddress_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UINT32, address_n, 1) \
X(a, CALLBACK, OPTIONAL, STRING, coin_name, 2) \
X(a, STATIC, OPTIONAL, BOOL, show_display, 3) \
X(a, STATIC, OPTIONAL, MESSAGE, multisig, 4) \
X(a, STATIC, OPTIONAL, UENUM, script_type, 5)
#define hw_trezor_messages_bitcoin_GetAddress_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_GetAddress_DEFAULT (const uint8_t*)"\x28\x00\x00"
#define hw_trezor_messages_bitcoin_GetAddress_multisig_MSGTYPE hw_trezor_messages_bitcoin_MultisigRedeemScriptType

#define hw_trezor_messages_bitcoin_Address_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING, address, 1)
#define hw_trezor_messages_bitcoin_Address_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_Address_DEFAULT NULL

#define hw_trezor_messages_bitcoin_SignMessage_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UINT32, address_n, 1) \
X(a, CALLBACK, REQUIRED, BYTES, message, 2) \
X(a, CALLBACK, OPTIONAL, STRING, coin_name, 3) \
X(a, STATIC, OPTIONAL, UENUM, script_type, 4)
#define hw_trezor_messages_bitcoin_SignMessage_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_SignMessage_DEFAULT (const uint8_t*)"\x20\x00\x00"

#define hw_trezor_messages_bitcoin_MessageSignature_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING, address, 1) \
X(a, CALLBACK, OPTIONAL, BYTES, signature, 2)
#define hw_trezor_messages_bitcoin_MessageSignature_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_MessageSignature_DEFAULT NULL

#define hw_trezor_messages_bitcoin_VerifyMessage_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING, address, 1) \
X(a, CALLBACK, OPTIONAL, BYTES, signature, 2) \
X(a, CALLBACK, OPTIONAL, BYTES, message, 3) \
X(a, CALLBACK, OPTIONAL, STRING, coin_name, 4)
#define hw_trezor_messages_bitcoin_VerifyMessage_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_VerifyMessage_DEFAULT NULL

#define hw_trezor_messages_bitcoin_SignTx_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, UINT32, outputs_count, 1) \
X(a, STATIC, REQUIRED, UINT32, inputs_count, 2) \
X(a, CALLBACK, OPTIONAL, STRING, coin_name, 3) \
X(a, STATIC, OPTIONAL, UINT32, version, 4) \
X(a, STATIC, OPTIONAL, UINT32, lock_time, 5) \
X(a, STATIC, OPTIONAL, UINT32, expiry, 6) \
X(a, STATIC, OPTIONAL, BOOL, overwintered, 7) \
X(a, STATIC, OPTIONAL, UINT32, version_group_id, 8) \
X(a, STATIC, OPTIONAL, UINT32, timestamp, 9) \
X(a, STATIC, OPTIONAL, UINT32, branch_id, 10)
#define hw_trezor_messages_bitcoin_SignTx_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_SignTx_DEFAULT (const uint8_t*)"\x20\x01\x28\x00\x00"

#define hw_trezor_messages_bitcoin_TxRequest_FIELDLIST(X, a) \
X(a, STATIC, OPTIONAL, UENUM, request_type, 1) \
X(a, STATIC, OPTIONAL, MESSAGE, details, 2) \
X(a, STATIC, OPTIONAL, MESSAGE, serialized, 3)
#define hw_trezor_messages_bitcoin_TxRequest_CALLBACK NULL
#define hw_trezor_messages_bitcoin_TxRequest_DEFAULT NULL
#define hw_trezor_messages_bitcoin_TxRequest_details_MSGTYPE hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType
#define hw_trezor_messages_bitcoin_TxRequest_serialized_MSGTYPE hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType

#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_FIELDLIST(X, a) \
X(a, STATIC, OPTIONAL, UINT32, request_index, 1) \
X(a, CALLBACK, OPTIONAL, BYTES, tx_hash, 2) \
X(a, STATIC, OPTIONAL, UINT32, extra_data_len, 3) \
X(a, STATIC, OPTIONAL, UINT32, extra_data_offset, 4)
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_DEFAULT NULL

#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_FIELDLIST(X, a) \
X(a, STATIC, OPTIONAL, UINT32, signature_index, 1) \
X(a, CALLBACK, OPTIONAL, BYTES, signature, 2) \
X(a, CALLBACK, OPTIONAL, BYTES, serialized_tx, 3)
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_DEFAULT NULL

#define hw_trezor_messages_bitcoin_TxAck_FIELDLIST(X, a) \
X(a, STATIC, OPTIONAL, MESSAGE, tx, 1)
#define hw_trezor_messages_bitcoin_TxAck_CALLBACK NULL
#define hw_trezor_messages_bitcoin_TxAck_DEFAULT NULL
#define hw_trezor_messages_bitcoin_TxAck_tx_MSGTYPE hw_trezor_messages_bitcoin_TxAck_TransactionType

#define hw_trezor_messages_bitcoin_TxAck_TransactionType_FIELDLIST(X, a) \
X(a, STATIC, OPTIONAL, UINT32, version, 1) \
X(a, CALLBACK, REPEATED, MESSAGE, inputs, 2) \
X(a, CALLBACK, REPEATED, MESSAGE, bin_outputs, 3) \
X(a, STATIC, OPTIONAL, UINT32, lock_time, 4) \
X(a, CALLBACK, REPEATED, MESSAGE, outputs, 5) \
X(a, STATIC, OPTIONAL, UINT32, inputs_cnt, 6) \
X(a, STATIC, OPTIONAL, UINT32, outputs_cnt, 7) \
X(a, CALLBACK, OPTIONAL, BYTES, extra_data, 8) \
X(a, STATIC, OPTIONAL, UINT32, extra_data_len, 9) \
X(a, STATIC, OPTIONAL, UINT32, expiry, 10) \
X(a, STATIC, OPTIONAL, BOOL, overwintered, 11) \
X(a, STATIC, OPTIONAL, UINT32, version_group_id, 12) \
X(a, STATIC, OPTIONAL, UINT32, timestamp, 13) \
X(a, STATIC, OPTIONAL, UINT32, branch_id, 14)
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_DEFAULT NULL
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_inputs_MSGTYPE hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_bin_outputs_MSGTYPE hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_outputs_MSGTYPE hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType

#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UINT32, address_n, 1) \
X(a, CALLBACK, REQUIRED, BYTES, prev_hash, 2) \
X(a, STATIC, REQUIRED, UINT32, prev_index, 3) \
X(a, CALLBACK, OPTIONAL, BYTES, script_sig, 4) \
X(a, STATIC, OPTIONAL, UINT32, sequence, 5) \
X(a, STATIC, OPTIONAL, UENUM, script_type, 6) \
X(a, STATIC, OPTIONAL, MESSAGE, multisig, 7) \
X(a, STATIC, OPTIONAL, UINT64, amount, 8) \
X(a, STATIC, OPTIONAL, UINT32, decred_tree, 9) \
X(a, STATIC, OPTIONAL, UINT32, decred_script_version, 10) \
X(a, CALLBACK, OPTIONAL, BYTES, prev_block_hash_bip115, 11) \
X(a, STATIC, OPTIONAL, UINT32, prev_block_height_bip115, 12)
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_DEFAULT (const uint8_t*)"\x28\xff\xff\xff\xff\x0f\x30\x00\x00"
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_multisig_MSGTYPE hw_trezor_messages_bitcoin_MultisigRedeemScriptType

#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, UINT64, amount, 1) \
X(a, CALLBACK, REQUIRED, BYTES, script_pubkey, 2) \
X(a, STATIC, OPTIONAL, UINT32, decred_script_version, 3)
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_DEFAULT NULL

#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING, address, 1) \
X(a, CALLBACK, REPEATED, UINT32, address_n, 2) \
X(a, STATIC, REQUIRED, UINT64, amount, 3) \
X(a, STATIC, REQUIRED, UENUM, script_type, 4) \
X(a, STATIC, OPTIONAL, MESSAGE, multisig, 5) \
X(a, CALLBACK, OPTIONAL, BYTES, op_return_data, 6) \
X(a, STATIC, OPTIONAL, UINT32, decred_script_version, 7) \
X(a, CALLBACK, OPTIONAL, BYTES, block_hash_bip115, 8) \
X(a, STATIC, OPTIONAL, UINT32, block_height_bip115, 9)
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_CALLBACK pb_default_field_callback
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_DEFAULT NULL
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_multisig_MSGTYPE hw_trezor_messages_bitcoin_MultisigRedeemScriptType

extern const pb_msgdesc_t hw_trezor_messages_bitcoin_MultisigRedeemScriptType_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_GetPublicKey_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_PublicKey_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_GetAddress_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_Address_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_SignMessage_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_MessageSignature_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_VerifyMessage_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_SignTx_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_TxRequest_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_TxAck_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_TxAck_TransactionType_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_msg;
extern const pb_msgdesc_t hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_fields &hw_trezor_messages_bitcoin_MultisigRedeemScriptType_msg
#define hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_fields &hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_msg
#define hw_trezor_messages_bitcoin_GetPublicKey_fields &hw_trezor_messages_bitcoin_GetPublicKey_msg
#define hw_trezor_messages_bitcoin_PublicKey_fields &hw_trezor_messages_bitcoin_PublicKey_msg
#define hw_trezor_messages_bitcoin_GetAddress_fields &hw_trezor_messages_bitcoin_GetAddress_msg
#define hw_trezor_messages_bitcoin_Address_fields &hw_trezor_messages_bitcoin_Address_msg
#define hw_trezor_messages_bitcoin_SignMessage_fields &hw_trezor_messages_bitcoin_SignMessage_msg
#define hw_trezor_messages_bitcoin_MessageSignature_fields &hw_trezor_messages_bitcoin_MessageSignature_msg
#define hw_trezor_messages_bitcoin_VerifyMessage_fields &hw_trezor_messages_bitcoin_VerifyMessage_msg
#define hw_trezor_messages_bitcoin_SignTx_fields &hw_trezor_messages_bitcoin_SignTx_msg
#define hw_trezor_messages_bitcoin_TxRequest_fields &hw_trezor_messages_bitcoin_TxRequest_msg
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_fields &hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_msg
#define hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_fields &hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_msg
#define hw_trezor_messages_bitcoin_TxAck_fields &hw_trezor_messages_bitcoin_TxAck_msg
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_fields &hw_trezor_messages_bitcoin_TxAck_TransactionType_msg
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_fields &hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_msg
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_fields &hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_msg
#define hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_fields &hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_msg

/* Maximum encoded size of messages (where known) */
/* hw_trezor_messages_bitcoin_MultisigRedeemScriptType_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_MultisigRedeemScriptType_HDNodePathType_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_GetPublicKey_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_PublicKey_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_GetAddress_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_Address_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_SignMessage_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_MessageSignature_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_VerifyMessage_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_SignTx_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_TxRequest_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_TxRequest_TxRequestDetailsType_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_TxRequest_TxRequestSerializedType_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_TxAck_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_TxAck_TransactionType_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_TxAck_TransactionType_TxInputType_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputBinType_size depends on runtime parameters */
/* hw_trezor_messages_bitcoin_TxAck_TransactionType_TxOutputType_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
